# 1. PersistentVolumeClaim: This requests storage for our database.
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc-test
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# 2. Deployment: This tells Kubernetes how to run our PostgreSQL container.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-test
  template:
    metadata:
      labels:
        app: postgres-test
    spec:
      containers:
        - name: postgres
          image: postgres:13
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "testdb"
            - name: POSTGRES_USER
              value: "testuser"
            - name: POSTGRES_PASSWORD
              value: "testpassword"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc-test

---
# 3. Service: This gives our PostgreSQL pod a stable network name.
apiVersion: v1
kind: Service
metadata:
  name: postgres-service-test
spec:
  selector:
    app: postgres-test
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
